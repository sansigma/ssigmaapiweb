/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var ssigmaapi_type_market_pb = require('../../../ssigmaapi/type/market_pb.js');
var ssigmaapi_type_trade_pb = require('../../../ssigmaapi/type/trade_pb.js');
var ssigmaapi_type_orderbook_pb = require('../../../ssigmaapi/type/orderbook_pb.js');
var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.exportSymbol('proto.ssigmaapi.markethub.v1.ExchangeStatus', null, global);
goog.exportSymbol('proto.ssigmaapi.markethub.v1.GetOrderBooksRequest', null, global);
goog.exportSymbol('proto.ssigmaapi.markethub.v1.GetOrderBooksResponse', null, global);
goog.exportSymbol('proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest', null, global);
goog.exportSymbol('proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse', null, global);
goog.exportSymbol('proto.ssigmaapi.markethub.v1.GetTradesRequest', null, global);
goog.exportSymbol('proto.ssigmaapi.markethub.v1.GetTradesResponse', null, global);
goog.exportSymbol('proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo', null, global);
goog.exportSymbol('proto.ssigmaapi.markethub.v1.TradesWithMarket', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssigmaapi.markethub.v1.GetTradesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ssigmaapi.markethub.v1.GetTradesRequest.repeatedFields_, null);
};
goog.inherits(proto.ssigmaapi.markethub.v1.GetTradesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ssigmaapi.markethub.v1.GetTradesRequest.displayName = 'proto.ssigmaapi.markethub.v1.GetTradesRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ssigmaapi.markethub.v1.GetTradesRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssigmaapi.markethub.v1.GetTradesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ssigmaapi.markethub.v1.GetTradesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssigmaapi.markethub.v1.GetTradesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssigmaapi.markethub.v1.GetTradesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketsList: jspb.Message.toObjectList(msg.getMarketsList(),
    ssigmaapi_type_market_pb.Market.toObject, includeInstance),
    velocityWindowingSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    volatilityWindowingSize: jspb.Message.getFieldWithDefault(msg, 3, 0),
    volumeWindowingSize: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssigmaapi.markethub.v1.GetTradesRequest}
 */
proto.ssigmaapi.markethub.v1.GetTradesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssigmaapi.markethub.v1.GetTradesRequest;
  return proto.ssigmaapi.markethub.v1.GetTradesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssigmaapi.markethub.v1.GetTradesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssigmaapi.markethub.v1.GetTradesRequest}
 */
proto.ssigmaapi.markethub.v1.GetTradesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ssigmaapi_type_market_pb.Market;
      reader.readMessage(value,ssigmaapi_type_market_pb.Market.deserializeBinaryFromReader);
      msg.addMarkets(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVelocityWindowingSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVolatilityWindowingSize(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVolumeWindowingSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssigmaapi.markethub.v1.GetTradesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssigmaapi.markethub.v1.GetTradesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssigmaapi.markethub.v1.GetTradesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssigmaapi.markethub.v1.GetTradesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      ssigmaapi_type_market_pb.Market.serializeBinaryToWriter
    );
  }
  f = message.getVelocityWindowingSize();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getVolatilityWindowingSize();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getVolumeWindowingSize();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * repeated ssigmaapi.type.Market markets = 1;
 * @return {!Array<!proto.ssigmaapi.type.Market>}
 */
proto.ssigmaapi.markethub.v1.GetTradesRequest.prototype.getMarketsList = function() {
  return /** @type{!Array<!proto.ssigmaapi.type.Market>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssigmaapi_type_market_pb.Market, 1));
};


/** @param {!Array<!proto.ssigmaapi.type.Market>} value */
proto.ssigmaapi.markethub.v1.GetTradesRequest.prototype.setMarketsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ssigmaapi.type.Market=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssigmaapi.type.Market}
 */
proto.ssigmaapi.markethub.v1.GetTradesRequest.prototype.addMarkets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ssigmaapi.type.Market, opt_index);
};


proto.ssigmaapi.markethub.v1.GetTradesRequest.prototype.clearMarketsList = function() {
  this.setMarketsList([]);
};


/**
 * optional int64 velocity_windowing_size = 2;
 * @return {number}
 */
proto.ssigmaapi.markethub.v1.GetTradesRequest.prototype.getVelocityWindowingSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ssigmaapi.markethub.v1.GetTradesRequest.prototype.setVelocityWindowingSize = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 volatility_windowing_size = 3;
 * @return {number}
 */
proto.ssigmaapi.markethub.v1.GetTradesRequest.prototype.getVolatilityWindowingSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.ssigmaapi.markethub.v1.GetTradesRequest.prototype.setVolatilityWindowingSize = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 volume_windowing_size = 4;
 * @return {number}
 */
proto.ssigmaapi.markethub.v1.GetTradesRequest.prototype.getVolumeWindowingSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.ssigmaapi.markethub.v1.GetTradesRequest.prototype.setVolumeWindowingSize = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssigmaapi.markethub.v1.GetTradesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ssigmaapi.markethub.v1.GetTradesResponse.repeatedFields_, null);
};
goog.inherits(proto.ssigmaapi.markethub.v1.GetTradesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ssigmaapi.markethub.v1.GetTradesResponse.displayName = 'proto.ssigmaapi.markethub.v1.GetTradesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ssigmaapi.markethub.v1.GetTradesResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssigmaapi.markethub.v1.GetTradesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ssigmaapi.markethub.v1.GetTradesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssigmaapi.markethub.v1.GetTradesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssigmaapi.markethub.v1.GetTradesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradesWithMarketList: jspb.Message.toObjectList(msg.getTradesWithMarketList(),
    proto.ssigmaapi.markethub.v1.TradesWithMarket.toObject, includeInstance),
    exchangeStatusList: jspb.Message.toObjectList(msg.getExchangeStatusList(),
    proto.ssigmaapi.markethub.v1.ExchangeStatus.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssigmaapi.markethub.v1.GetTradesResponse}
 */
proto.ssigmaapi.markethub.v1.GetTradesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssigmaapi.markethub.v1.GetTradesResponse;
  return proto.ssigmaapi.markethub.v1.GetTradesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssigmaapi.markethub.v1.GetTradesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssigmaapi.markethub.v1.GetTradesResponse}
 */
proto.ssigmaapi.markethub.v1.GetTradesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ssigmaapi.markethub.v1.TradesWithMarket;
      reader.readMessage(value,proto.ssigmaapi.markethub.v1.TradesWithMarket.deserializeBinaryFromReader);
      msg.addTradesWithMarket(value);
      break;
    case 2:
      var value = new proto.ssigmaapi.markethub.v1.ExchangeStatus;
      reader.readMessage(value,proto.ssigmaapi.markethub.v1.ExchangeStatus.deserializeBinaryFromReader);
      msg.addExchangeStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssigmaapi.markethub.v1.GetTradesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssigmaapi.markethub.v1.GetTradesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssigmaapi.markethub.v1.GetTradesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssigmaapi.markethub.v1.GetTradesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradesWithMarketList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ssigmaapi.markethub.v1.TradesWithMarket.serializeBinaryToWriter
    );
  }
  f = message.getExchangeStatusList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ssigmaapi.markethub.v1.ExchangeStatus.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TradesWithMarket trades_with_market = 1;
 * @return {!Array<!proto.ssigmaapi.markethub.v1.TradesWithMarket>}
 */
proto.ssigmaapi.markethub.v1.GetTradesResponse.prototype.getTradesWithMarketList = function() {
  return /** @type{!Array<!proto.ssigmaapi.markethub.v1.TradesWithMarket>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ssigmaapi.markethub.v1.TradesWithMarket, 1));
};


/** @param {!Array<!proto.ssigmaapi.markethub.v1.TradesWithMarket>} value */
proto.ssigmaapi.markethub.v1.GetTradesResponse.prototype.setTradesWithMarketList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ssigmaapi.markethub.v1.TradesWithMarket=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssigmaapi.markethub.v1.TradesWithMarket}
 */
proto.ssigmaapi.markethub.v1.GetTradesResponse.prototype.addTradesWithMarket = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ssigmaapi.markethub.v1.TradesWithMarket, opt_index);
};


proto.ssigmaapi.markethub.v1.GetTradesResponse.prototype.clearTradesWithMarketList = function() {
  this.setTradesWithMarketList([]);
};


/**
 * repeated ExchangeStatus exchange_status = 2;
 * @return {!Array<!proto.ssigmaapi.markethub.v1.ExchangeStatus>}
 */
proto.ssigmaapi.markethub.v1.GetTradesResponse.prototype.getExchangeStatusList = function() {
  return /** @type{!Array<!proto.ssigmaapi.markethub.v1.ExchangeStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ssigmaapi.markethub.v1.ExchangeStatus, 2));
};


/** @param {!Array<!proto.ssigmaapi.markethub.v1.ExchangeStatus>} value */
proto.ssigmaapi.markethub.v1.GetTradesResponse.prototype.setExchangeStatusList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ssigmaapi.markethub.v1.ExchangeStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssigmaapi.markethub.v1.ExchangeStatus}
 */
proto.ssigmaapi.markethub.v1.GetTradesResponse.prototype.addExchangeStatus = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ssigmaapi.markethub.v1.ExchangeStatus, opt_index);
};


proto.ssigmaapi.markethub.v1.GetTradesResponse.prototype.clearExchangeStatusList = function() {
  this.setExchangeStatusList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ssigmaapi.markethub.v1.GetOrderBooksRequest.repeatedFields_, null);
};
goog.inherits(proto.ssigmaapi.markethub.v1.GetOrderBooksRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ssigmaapi.markethub.v1.GetOrderBooksRequest.displayName = 'proto.ssigmaapi.markethub.v1.GetOrderBooksRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ssigmaapi.markethub.v1.GetOrderBooksRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssigmaapi.markethub.v1.GetOrderBooksRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketList: jspb.Message.toObjectList(msg.getMarketList(),
    ssigmaapi_type_market_pb.Market.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssigmaapi.markethub.v1.GetOrderBooksRequest}
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssigmaapi.markethub.v1.GetOrderBooksRequest;
  return proto.ssigmaapi.markethub.v1.GetOrderBooksRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssigmaapi.markethub.v1.GetOrderBooksRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssigmaapi.markethub.v1.GetOrderBooksRequest}
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ssigmaapi_type_market_pb.Market;
      reader.readMessage(value,ssigmaapi_type_market_pb.Market.deserializeBinaryFromReader);
      msg.addMarket(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssigmaapi.markethub.v1.GetOrderBooksRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssigmaapi.markethub.v1.GetOrderBooksRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      ssigmaapi_type_market_pb.Market.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ssigmaapi.type.Market market = 1;
 * @return {!Array<!proto.ssigmaapi.type.Market>}
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksRequest.prototype.getMarketList = function() {
  return /** @type{!Array<!proto.ssigmaapi.type.Market>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssigmaapi_type_market_pb.Market, 1));
};


/** @param {!Array<!proto.ssigmaapi.type.Market>} value */
proto.ssigmaapi.markethub.v1.GetOrderBooksRequest.prototype.setMarketList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ssigmaapi.type.Market=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssigmaapi.type.Market}
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksRequest.prototype.addMarket = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ssigmaapi.type.Market, opt_index);
};


proto.ssigmaapi.markethub.v1.GetOrderBooksRequest.prototype.clearMarketList = function() {
  this.setMarketList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.repeatedFields_, null);
};
goog.inherits(proto.ssigmaapi.markethub.v1.GetOrderBooksResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.displayName = 'proto.ssigmaapi.markethub.v1.GetOrderBooksResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssigmaapi.markethub.v1.GetOrderBooksResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    allList: jspb.Message.toObjectList(msg.getAllList(),
    ssigmaapi_type_orderbook_pb.OrderBook.toObject, includeInstance),
    timestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    exchangeStatusList: jspb.Message.toObjectList(msg.getExchangeStatusList(),
    proto.ssigmaapi.markethub.v1.ExchangeStatus.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssigmaapi.markethub.v1.GetOrderBooksResponse}
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssigmaapi.markethub.v1.GetOrderBooksResponse;
  return proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssigmaapi.markethub.v1.GetOrderBooksResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssigmaapi.markethub.v1.GetOrderBooksResponse}
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ssigmaapi_type_orderbook_pb.OrderBook;
      reader.readMessage(value,ssigmaapi_type_orderbook_pb.OrderBook.deserializeBinaryFromReader);
      msg.addAll(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = new proto.ssigmaapi.markethub.v1.ExchangeStatus;
      reader.readMessage(value,proto.ssigmaapi.markethub.v1.ExchangeStatus.deserializeBinaryFromReader);
      msg.addExchangeStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssigmaapi.markethub.v1.GetOrderBooksResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      ssigmaapi_type_orderbook_pb.OrderBook.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getExchangeStatusList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ssigmaapi.markethub.v1.ExchangeStatus.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ssigmaapi.type.OrderBook all = 1;
 * @return {!Array<!proto.ssigmaapi.type.OrderBook>}
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.prototype.getAllList = function() {
  return /** @type{!Array<!proto.ssigmaapi.type.OrderBook>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssigmaapi_type_orderbook_pb.OrderBook, 1));
};


/** @param {!Array<!proto.ssigmaapi.type.OrderBook>} value */
proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.prototype.setAllList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ssigmaapi.type.OrderBook=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssigmaapi.type.OrderBook}
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.prototype.addAll = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ssigmaapi.type.OrderBook, opt_index);
};


proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.prototype.clearAllList = function() {
  this.setAllList([]);
};


/**
 * optional int64 timestamp = 2;
 * @return {number}
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated ExchangeStatus exchange_status = 3;
 * @return {!Array<!proto.ssigmaapi.markethub.v1.ExchangeStatus>}
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.prototype.getExchangeStatusList = function() {
  return /** @type{!Array<!proto.ssigmaapi.markethub.v1.ExchangeStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ssigmaapi.markethub.v1.ExchangeStatus, 3));
};


/** @param {!Array<!proto.ssigmaapi.markethub.v1.ExchangeStatus>} value */
proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.prototype.setExchangeStatusList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ssigmaapi.markethub.v1.ExchangeStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssigmaapi.markethub.v1.ExchangeStatus}
 */
proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.prototype.addExchangeStatus = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ssigmaapi.markethub.v1.ExchangeStatus, opt_index);
};


proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.prototype.clearExchangeStatusList = function() {
  this.setExchangeStatusList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest.displayName = 'proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradesReq: (f = msg.getTradesReq()) && proto.ssigmaapi.markethub.v1.GetTradesRequest.toObject(includeInstance, f),
    orderbooksReq: (f = msg.getOrderbooksReq()) && proto.ssigmaapi.markethub.v1.GetOrderBooksRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest}
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest;
  return proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest}
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ssigmaapi.markethub.v1.GetTradesRequest;
      reader.readMessage(value,proto.ssigmaapi.markethub.v1.GetTradesRequest.deserializeBinaryFromReader);
      msg.setTradesReq(value);
      break;
    case 2:
      var value = new proto.ssigmaapi.markethub.v1.GetOrderBooksRequest;
      reader.readMessage(value,proto.ssigmaapi.markethub.v1.GetOrderBooksRequest.deserializeBinaryFromReader);
      msg.setOrderbooksReq(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradesReq();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ssigmaapi.markethub.v1.GetTradesRequest.serializeBinaryToWriter
    );
  }
  f = message.getOrderbooksReq();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ssigmaapi.markethub.v1.GetOrderBooksRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional GetTradesRequest trades_req = 1;
 * @return {?proto.ssigmaapi.markethub.v1.GetTradesRequest}
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest.prototype.getTradesReq = function() {
  return /** @type{?proto.ssigmaapi.markethub.v1.GetTradesRequest} */ (
    jspb.Message.getWrapperField(this, proto.ssigmaapi.markethub.v1.GetTradesRequest, 1));
};


/** @param {?proto.ssigmaapi.markethub.v1.GetTradesRequest|undefined} value */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest.prototype.setTradesReq = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest.prototype.clearTradesReq = function() {
  this.setTradesReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest.prototype.hasTradesReq = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GetOrderBooksRequest orderbooks_req = 2;
 * @return {?proto.ssigmaapi.markethub.v1.GetOrderBooksRequest}
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest.prototype.getOrderbooksReq = function() {
  return /** @type{?proto.ssigmaapi.markethub.v1.GetOrderBooksRequest} */ (
    jspb.Message.getWrapperField(this, proto.ssigmaapi.markethub.v1.GetOrderBooksRequest, 2));
};


/** @param {?proto.ssigmaapi.markethub.v1.GetOrderBooksRequest|undefined} value */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest.prototype.setOrderbooksReq = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest.prototype.clearOrderbooksReq = function() {
  this.setOrderbooksReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksRequest.prototype.hasOrderbooksReq = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.repeatedFields_, null);
};
goog.inherits(proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.displayName = 'proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradesRes: (f = msg.getTradesRes()) && proto.ssigmaapi.markethub.v1.GetTradesResponse.toObject(includeInstance, f),
    orderbooksRes: (f = msg.getOrderbooksRes()) && proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.toObject(includeInstance, f),
    exchangeStatusList: jspb.Message.toObjectList(msg.getExchangeStatusList(),
    proto.ssigmaapi.markethub.v1.ExchangeStatus.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse}
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse;
  return proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse}
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ssigmaapi.markethub.v1.GetTradesResponse;
      reader.readMessage(value,proto.ssigmaapi.markethub.v1.GetTradesResponse.deserializeBinaryFromReader);
      msg.setTradesRes(value);
      break;
    case 2:
      var value = new proto.ssigmaapi.markethub.v1.GetOrderBooksResponse;
      reader.readMessage(value,proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.deserializeBinaryFromReader);
      msg.setOrderbooksRes(value);
      break;
    case 3:
      var value = new proto.ssigmaapi.markethub.v1.ExchangeStatus;
      reader.readMessage(value,proto.ssigmaapi.markethub.v1.ExchangeStatus.deserializeBinaryFromReader);
      msg.addExchangeStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradesRes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ssigmaapi.markethub.v1.GetTradesResponse.serializeBinaryToWriter
    );
  }
  f = message.getOrderbooksRes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ssigmaapi.markethub.v1.GetOrderBooksResponse.serializeBinaryToWriter
    );
  }
  f = message.getExchangeStatusList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ssigmaapi.markethub.v1.ExchangeStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional GetTradesResponse trades_res = 1;
 * @return {?proto.ssigmaapi.markethub.v1.GetTradesResponse}
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.prototype.getTradesRes = function() {
  return /** @type{?proto.ssigmaapi.markethub.v1.GetTradesResponse} */ (
    jspb.Message.getWrapperField(this, proto.ssigmaapi.markethub.v1.GetTradesResponse, 1));
};


/** @param {?proto.ssigmaapi.markethub.v1.GetTradesResponse|undefined} value */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.prototype.setTradesRes = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.prototype.clearTradesRes = function() {
  this.setTradesRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.prototype.hasTradesRes = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GetOrderBooksResponse orderbooks_res = 2;
 * @return {?proto.ssigmaapi.markethub.v1.GetOrderBooksResponse}
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.prototype.getOrderbooksRes = function() {
  return /** @type{?proto.ssigmaapi.markethub.v1.GetOrderBooksResponse} */ (
    jspb.Message.getWrapperField(this, proto.ssigmaapi.markethub.v1.GetOrderBooksResponse, 2));
};


/** @param {?proto.ssigmaapi.markethub.v1.GetOrderBooksResponse|undefined} value */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.prototype.setOrderbooksRes = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.prototype.clearOrderbooksRes = function() {
  this.setOrderbooksRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.prototype.hasOrderbooksRes = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated ExchangeStatus exchange_status = 3;
 * @return {!Array<!proto.ssigmaapi.markethub.v1.ExchangeStatus>}
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.prototype.getExchangeStatusList = function() {
  return /** @type{!Array<!proto.ssigmaapi.markethub.v1.ExchangeStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ssigmaapi.markethub.v1.ExchangeStatus, 3));
};


/** @param {!Array<!proto.ssigmaapi.markethub.v1.ExchangeStatus>} value */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.prototype.setExchangeStatusList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ssigmaapi.markethub.v1.ExchangeStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssigmaapi.markethub.v1.ExchangeStatus}
 */
proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.prototype.addExchangeStatus = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ssigmaapi.markethub.v1.ExchangeStatus, opt_index);
};


proto.ssigmaapi.markethub.v1.GetTradesAndOrderBooksResponse.prototype.clearExchangeStatusList = function() {
  this.setExchangeStatusList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.displayName = 'proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    trade: (f = msg.getTrade()) && ssigmaapi_type_trade_pb.Trade.toObject(includeInstance, f),
    velocity: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    acceleration: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    volatility: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    volumeBase: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    volumeQuote: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    momentumRate: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),
    velocityWindowingSize: jspb.Message.getFieldWithDefault(msg, 8, 0),
    volatilityWindowingSize: jspb.Message.getFieldWithDefault(msg, 9, 0),
    volumeWindowingSize: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo}
 */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo;
  return proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo}
 */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ssigmaapi_type_trade_pb.Trade;
      reader.readMessage(value,ssigmaapi_type_trade_pb.Trade.deserializeBinaryFromReader);
      msg.setTrade(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVelocity(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAcceleration(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVolatility(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVolumeBase(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVolumeQuote(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMomentumRate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVelocityWindowingSize(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVolatilityWindowingSize(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVolumeWindowingSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrade();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      ssigmaapi_type_trade_pb.Trade.serializeBinaryToWriter
    );
  }
  f = message.getVelocity();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getAcceleration();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getVolatility();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getVolumeBase();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getVolumeQuote();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getMomentumRate();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getVelocityWindowingSize();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getVolatilityWindowingSize();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getVolumeWindowingSize();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
};


/**
 * optional ssigmaapi.type.Trade trade = 1;
 * @return {?proto.ssigmaapi.type.Trade}
 */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.getTrade = function() {
  return /** @type{?proto.ssigmaapi.type.Trade} */ (
    jspb.Message.getWrapperField(this, ssigmaapi_type_trade_pb.Trade, 1));
};


/** @param {?proto.ssigmaapi.type.Trade|undefined} value */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.setTrade = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.clearTrade = function() {
  this.setTrade(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.hasTrade = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double velocity = 2;
 * @return {number}
 */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.getVelocity = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.setVelocity = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double acceleration = 3;
 * @return {number}
 */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.getAcceleration = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.setAcceleration = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double volatility = 4;
 * @return {number}
 */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.getVolatility = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.setVolatility = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double volume_base = 5;
 * @return {number}
 */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.getVolumeBase = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.setVolumeBase = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double volume_quote = 6;
 * @return {number}
 */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.getVolumeQuote = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.setVolumeQuote = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double momentum_rate = 7;
 * @return {number}
 */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.getMomentumRate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.setMomentumRate = function(value) {
  jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional int64 velocity_windowing_size = 8;
 * @return {number}
 */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.getVelocityWindowingSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.setVelocityWindowingSize = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 volatility_windowing_size = 9;
 * @return {number}
 */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.getVolatilityWindowingSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.setVolatilityWindowingSize = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 volume_windowing_size = 10;
 * @return {number}
 */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.getVolumeWindowingSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.prototype.setVolumeWindowingSize = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssigmaapi.markethub.v1.TradesWithMarket = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ssigmaapi.markethub.v1.TradesWithMarket.repeatedFields_, null);
};
goog.inherits(proto.ssigmaapi.markethub.v1.TradesWithMarket, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ssigmaapi.markethub.v1.TradesWithMarket.displayName = 'proto.ssigmaapi.markethub.v1.TradesWithMarket';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ssigmaapi.markethub.v1.TradesWithMarket.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssigmaapi.markethub.v1.TradesWithMarket.prototype.toObject = function(opt_includeInstance) {
  return proto.ssigmaapi.markethub.v1.TradesWithMarket.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssigmaapi.markethub.v1.TradesWithMarket} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssigmaapi.markethub.v1.TradesWithMarket.toObject = function(includeInstance, msg) {
  var f, obj = {
    market: (f = msg.getMarket()) && ssigmaapi_type_market_pb.Market.toObject(includeInstance, f),
    tradesList: jspb.Message.toObjectList(msg.getTradesList(),
    proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssigmaapi.markethub.v1.TradesWithMarket}
 */
proto.ssigmaapi.markethub.v1.TradesWithMarket.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssigmaapi.markethub.v1.TradesWithMarket;
  return proto.ssigmaapi.markethub.v1.TradesWithMarket.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssigmaapi.markethub.v1.TradesWithMarket} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssigmaapi.markethub.v1.TradesWithMarket}
 */
proto.ssigmaapi.markethub.v1.TradesWithMarket.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ssigmaapi_type_market_pb.Market;
      reader.readMessage(value,ssigmaapi_type_market_pb.Market.deserializeBinaryFromReader);
      msg.setMarket(value);
      break;
    case 2:
      var value = new proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo;
      reader.readMessage(value,proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.deserializeBinaryFromReader);
      msg.addTrades(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssigmaapi.markethub.v1.TradesWithMarket.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssigmaapi.markethub.v1.TradesWithMarket.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssigmaapi.markethub.v1.TradesWithMarket} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssigmaapi.markethub.v1.TradesWithMarket.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarket();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      ssigmaapi_type_market_pb.Market.serializeBinaryToWriter
    );
  }
  f = message.getTradesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ssigmaapi.type.Market market = 1;
 * @return {?proto.ssigmaapi.type.Market}
 */
proto.ssigmaapi.markethub.v1.TradesWithMarket.prototype.getMarket = function() {
  return /** @type{?proto.ssigmaapi.type.Market} */ (
    jspb.Message.getWrapperField(this, ssigmaapi_type_market_pb.Market, 1));
};


/** @param {?proto.ssigmaapi.type.Market|undefined} value */
proto.ssigmaapi.markethub.v1.TradesWithMarket.prototype.setMarket = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ssigmaapi.markethub.v1.TradesWithMarket.prototype.clearMarket = function() {
  this.setMarket(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ssigmaapi.markethub.v1.TradesWithMarket.prototype.hasMarket = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated TradeWithAdditionalInfo trades = 2;
 * @return {!Array<!proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo>}
 */
proto.ssigmaapi.markethub.v1.TradesWithMarket.prototype.getTradesList = function() {
  return /** @type{!Array<!proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo, 2));
};


/** @param {!Array<!proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo>} value */
proto.ssigmaapi.markethub.v1.TradesWithMarket.prototype.setTradesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo}
 */
proto.ssigmaapi.markethub.v1.TradesWithMarket.prototype.addTrades = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ssigmaapi.markethub.v1.TradeWithAdditionalInfo, opt_index);
};


proto.ssigmaapi.markethub.v1.TradesWithMarket.prototype.clearTradesList = function() {
  this.setTradesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssigmaapi.markethub.v1.ExchangeStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ssigmaapi.markethub.v1.ExchangeStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ssigmaapi.markethub.v1.ExchangeStatus.displayName = 'proto.ssigmaapi.markethub.v1.ExchangeStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssigmaapi.markethub.v1.ExchangeStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.ssigmaapi.markethub.v1.ExchangeStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssigmaapi.markethub.v1.ExchangeStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssigmaapi.markethub.v1.ExchangeStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchange: jspb.Message.getFieldWithDefault(msg, 1, ""),
    open: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssigmaapi.markethub.v1.ExchangeStatus}
 */
proto.ssigmaapi.markethub.v1.ExchangeStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssigmaapi.markethub.v1.ExchangeStatus;
  return proto.ssigmaapi.markethub.v1.ExchangeStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssigmaapi.markethub.v1.ExchangeStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssigmaapi.markethub.v1.ExchangeStatus}
 */
proto.ssigmaapi.markethub.v1.ExchangeStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchange(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOpen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssigmaapi.markethub.v1.ExchangeStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssigmaapi.markethub.v1.ExchangeStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssigmaapi.markethub.v1.ExchangeStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssigmaapi.markethub.v1.ExchangeStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchange();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOpen();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string exchange = 1;
 * @return {string}
 */
proto.ssigmaapi.markethub.v1.ExchangeStatus.prototype.getExchange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ssigmaapi.markethub.v1.ExchangeStatus.prototype.setExchange = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool open = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.ssigmaapi.markethub.v1.ExchangeStatus.prototype.getOpen = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.ssigmaapi.markethub.v1.ExchangeStatus.prototype.setOpen = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


goog.object.extend(exports, proto.ssigmaapi.markethub.v1);
